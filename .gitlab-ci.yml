stages:
  - setup
  - verify
  - test
  - build

.vendor:
  - &vendor
    if [ ! -d "vendor" ]; then
      make setup:vendor;
    fi

.cache: &cache
  cache:
    key: "${CARGO_LOCK_CHECKSUM}"
    paths:
      - .cargo
      - vendor

.vet-tools: &vet-tools
  image: grauwoelfchen/rust-vet-tools:1.40.0-stable
  before_script:
    - rustc --version
    - cargo --version
    - cargo fmt --version
    - cargo clippy --version
    - kcov --version
    - *vendor
    - mkdir -p .git/hooks
  <<: *cache

.rust: &rust
  image: grauwoelfchen/rust:1.40.0-stable
  before_script:
    - rustc --version
    - cargo --version
    - cargo fmt --version
    - cargo clippy --version
    - *vendor
    - mkdir -p .git/hooks
  <<: *cache

# -- setup {{{
setup-checksum:
  stage: setup
  image: grauwoelfchen/rust-vet-tools:1.40.0-stable
  variables:
    API_HEADER: "PRIVATE-TOKEN: ${GITLAB_PRIVATE_TOKEN}"
    GITLAB_HOST: gitlab.com
    GITLAB_API_URL: "https://${GITLAB_HOST}/api/v4"
    # GITLAB_PROJECT_ID:
    # GITLAB_PRIVATE_TOKEN:
  script:
    - curl --version
    - export VALUE=$(md5sum Cargo.lock | awk '{print $1}') &&
      export KEY="CARGO_LOCK_CHECKSUM" &&
      curl --silent --request PUT --header "${API_HEADER}"
      "${GITLAB_API_URL}/projects/${GITLAB_PROJECT_ID}/variables/${KEY}"
      --form "value=${VALUE}"
# }}}

# -- verify {{{
check:
  stage: verify
  <<: *rust
  script:
    - make verify:check

format:
  stage: verify
  <<: *rust
  script:
    - make verify:format

lint:
  stage: verify
  <<: *rust
  script:
    - make verify:lint
# }}}

# -- test {{{
test:
  stage: test
  <<: *vet-tools
  script:
    # test & get covered
    - KCOV_PATH=/usr/bin/kcov make coverage
  after_script:
    - cat target/coverage/index.json
  except:
    - tags
# }}}

# -- build {{{
build:
  stage: build
  <<: *rust
  script:
    - make build:debug
  only:
    - master

release:
  stage: build
  <<: *rust
  script:
    - make build:release
  only:
    - tags
# }}}
